{"version":3,"sources":["components/CalculatorKey.js","components/Calculator.js","App.js","index.js"],"names":["CalculatorKey","props","className","onClick","keyVal","Calculator","useState","prevVal","setPrevVal","nextVal","setNextVal","operator","setOperator","useEffect","MathOperations","firstVal","secondVal","handleOperation","val","num","Number","isInteger","parseInt","String","getOp","parseFloat","doOperation","test","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAaeA,MAVf,SAAuBC,GACtB,OACC,yBAAQC,UAAS,UAAOD,EAAMC,WAC7BC,QAAW,kBAAMF,EAAME,QAAQF,EAAMG,SADtC,UAGEH,EAAMG,OAAQ,QCqHHC,MA1Hf,WAEC,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,KAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,mBAAS,MAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,cAAU,CAACF,EAAUF,EAASF,IAExC,IAAMO,EAAiB,CACtB,IAAK,SAACC,EAAUC,GAAX,OAAyBD,EAAWC,GACzC,IAAK,SAACD,EAAUC,GAAX,OAAyBD,EAAWC,GACzC,IAAK,SAACD,EAAUC,GAAX,OAAyBD,EAAWC,GACzC,IAAK,SAACD,EAAUC,GAAX,OAAyBD,EAAWC,GACzC,IAAK,SAACD,EAAUC,GAAX,OAAyBA,IA8BzBC,EAAkB,SAACC,GAjBT,IAACC,EAkBZC,OAAOC,UAAUH,IAlBLC,EAmBNG,SAASJ,EAAK,IAlBxBR,EAAuB,MAAZD,EACTc,OAAOJ,GACPV,EAAUU,IAiBDD,KAAOJ,GACC,OAAbH,IACLC,EAAYM,GACZV,EAAWC,GACXC,EAAW,KAENC,GACLC,EAAYM,GAEPX,GAAWI,GAAYF,GAvCV,WACnB,IAAIe,EAAQV,EAAeH,GAC1Bc,WAAWlB,GACXkB,WAAWhB,IAEZG,EAAY,MACZF,EAAWa,OAAOC,IAClBhB,EAAW,MAiCVkB,IAEkB,MAARR,GAnBXR,EAAW,KACXF,EAAW,IAoBQ,MAARU,IA3BP,KAAKS,KAAKlB,IACbC,EAAWD,EAAU,OA+BvB,OACC,sBAAKP,UAAU,aAAf,UACI,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,SAAf,UAAyBO,EAAzB,SAEF,sBAAKP,UAAU,oBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,cAAC,EAAD,CAAeE,OAAQ,IAAKD,QAASc,IAC3C,yBAII,sBAAKf,UAAU,iBAAf,UACE,cAAC,EAAD,CAAeE,OAAQ,IAAKD,QAASc,IACrC,cAAC,EAAD,CAAeb,OAAQ,IAAKD,QAASc,IACrC,cAAC,EAAD,CAAeb,OAAQ,IAAKD,QAASc,IACrC,cAAC,EAAD,CAAeb,OAAQ,IAAKD,QAASc,IACrC,cAAC,EAAD,CAAeb,OAAQ,IAAKD,QAASc,IAC3C,yBAII,sBAAKf,UAAU,eAAf,UACE,cAAC,EAAD,CAAeE,OAAQ,EAAGD,QAASc,IACnC,cAAC,EAAD,CAAeb,OAAQ,EAAGD,QAASc,IACnC,cAAC,EAAD,CAAeb,OAAQ,EAAGD,QAASc,IACzC,sBAGM,cAAC,EAAD,CAAeb,OAAQ,EAAGD,QAASc,IACnC,cAAC,EAAD,CAAeb,OAAQ,EAAGD,QAASc,IACnC,cAAC,EAAD,CAAeb,OAAQ,EAAGD,QAASc,IACzC,sBAGM,cAAC,EAAD,CAAeb,OAAQ,EAAGD,QAASc,IACnC,cAAC,EAAD,CAAeb,OAAQ,EAAGD,QAASc,IACnC,cAAC,EAAD,CAAeb,OAAQ,EAAGD,QAASc,IACzC,sBAGM,cAAC,EAAD,CACEf,UAAU,UACVE,OAAQ,IACRD,QAASc,IAEX,cAAC,EAAD,CACEf,UAAU,WACVE,OAAQ,EACRD,QAASc,cC3GNW,MANf,WAEM,OAAO,cAAC,EAAD,KCFbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.196f4017.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction CalculatorKey(props) {\r\n\treturn (\r\n\t\t<button className = {`${props.className}`}\r\n\t\t\tonClick = {() => props.onClick(props.keyVal)}>\r\n\t\t\t\r\n\t\t\t{props.keyVal}{\" \"}\r\n\t\t</button>\r\n\t)\r\n}\r\n\r\nexport default CalculatorKey\r\n","import React, {useState, useEffect} from 'react'\r\nimport CalculatorKey from \"./CalculatorKey\"\r\n\r\nfunction Calculator() {\r\n\r\n\tconst [prevVal, setPrevVal] = useState(null)\r\n\tconst [nextVal, setNextVal] = useState(\"0\")\r\n\tconst [operator, setOperator] = useState(null)\r\n\t\r\n\tuseEffect(() => {}, [operator, nextVal, prevVal])\r\n\r\n\tconst MathOperations = {\r\n\t\t\"+\": (firstVal, secondVal) => firstVal + secondVal,\r\n\t\t\"-\": (firstVal, secondVal) => firstVal - secondVal,\r\n\t\t\"*\": (firstVal, secondVal) => firstVal * secondVal,\r\n\t\t\"/\": (firstVal, secondVal) => firstVal / secondVal,\r\n\t\t\"=\": (firstVal, secondVal) => secondVal\r\n\t}\r\n\r\n\tconst doOperation = () => {\r\n\t\tlet getOp = MathOperations[operator](\r\n\t\t\tparseFloat(prevVal),\r\n\t\t\tparseFloat(nextVal)\r\n\t\t)\r\n\t\tsetOperator(null)\r\n\t\tsetNextVal(String(getOp))\r\n\t\tsetPrevVal(null)\r\n\t}\r\n\r\n\tconst makeNum = (num) => {\r\n\t\tsetNextVal(nextVal === \"0\" \r\n\t\t? String(num)\r\n\t\t: nextVal + num)\r\n\t}\r\n\r\n\tconst decimal = () => {\r\n\t\tif(!/\\./.test(nextVal)){\r\n\t\t\tsetNextVal(nextVal + \".\")\r\n\t\t}\r\n\t}\r\n\r\n\tconst clear = () => {\r\n\t\tsetNextVal(\"0\")\r\n\t\tsetPrevVal(0)\r\n\t}\r\n\r\n\tconst handleOperation = (val) => {\r\n\t\tif (Number.isInteger(val)) {\r\n\t\t  makeNum(parseInt(val, 10))\r\n\t\t} else if (val in MathOperations) {\r\n\t\t  if (operator === null) {\r\n\t\t\tsetOperator(val);\r\n\t\t\tsetPrevVal(nextVal);\r\n\t\t\tsetNextVal(\"\");\r\n\t\t  }\r\n\t\t  if (operator) {\r\n\t\t\tsetOperator(val);\r\n\t\t  }\r\n\t\t  if (prevVal && operator && nextVal) {\r\n\t\t\tdoOperation();\r\n\t\t  }\r\n\t\t} else if (val === \"C\") {\r\n\t\t  clear();\r\n\t\t} else if (val === \".\") {\r\n\t\t  decimal();\r\n\t\t}\r\n\t  };\r\n\r\n\treturn (\r\n\t\t<div className=\"calculator\">\r\n      <div className=\"calculator-input\">\r\n        <div className=\"result\">{nextVal} </div>\r\n      </div>\r\n      <div className=\"calculator-keypad\">\r\n        <div className=\"keys-function\">\r\n          <CalculatorKey keyVal={\"C\"} onClick={handleOperation} />\r\n\t\t  <p>\r\n\t\t\t  \r\n\t\t\t  </p>\r\n        </div>\r\n        <div className=\"keys-operators\">\r\n          <CalculatorKey keyVal={\"+\"} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={\"-\"} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={\"*\"} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={\"/\"} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={\"=\"} onClick={handleOperation} />\r\n\t\t  <p>\r\n\t\t\t  \r\n\t\t\t  </p>\r\n        </div>\r\n        <div className=\"keys-numbers\">\r\n          <CalculatorKey keyVal={9} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={8} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={7} onClick={handleOperation} />\r\n\t\t  <p>\r\n\r\n\t\t  </p>\r\n          <CalculatorKey keyVal={6} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={5} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={4} onClick={handleOperation} />\r\n\t\t  <p>\r\n\t\t\t  \r\n\t\t\t  </p>\r\n          <CalculatorKey keyVal={3} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={2} onClick={handleOperation} />\r\n          <CalculatorKey keyVal={1} onClick={handleOperation} />\r\n\t\t  <p>\r\n\t\t\t  \r\n\t\t\t  </p>\r\n          <CalculatorKey\r\n            className=\"key-dot\"\r\n            keyVal={\".\"}\r\n            onClick={handleOperation}\r\n          />\r\n          <CalculatorKey\r\n            className=\"key-zero\"\r\n            keyVal={0}\r\n            onClick={handleOperation}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\t)\r\n}\r\n\r\nexport default Calculator\r\n","import React, {useState, useEffect, useContext} from 'react';\r\nimport './App.css';\r\nimport Calculator from './components/Calculator';\r\n\r\nfunction App() {\r\n   \r\n      return <Calculator/>\r\n  \r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}